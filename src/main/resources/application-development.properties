server.servlet.context-path=/fraud-checker
server.port=9001
#spring.devtools.restart.exclude = static/**,templates/**,custom/**
# valid values are: always, never, on_param
#server.error.include-stacktrace=always
server.error.include-stacktrace=never
#
# Spring Boot Custom Error Page
# =============================
# 1. Disable the white label error page entirely, by setting the
#    server.error.whitelabel.enabled property to false:
#
#    server.error.whitelabel.enabled = false
#
#    Adding this entry to the application.properties file will
#    disable the white label error page and show a concise page
#    that originates from the underlying application container,
#    e.g., Tomcat.
#
# 2. Now comes the question of who then actually handles the error?
#
#    Answer: It's usually the underlying application container.
#    We can further customize things by showing our custom error
#    pages instead of all the defaults.
#
# 3. Displaying Custom Error Pages
#    1. Create a custom HTML error page and call it error.html.  Save
#       it under resources/public directory to be automatically
#       picked up by default Spring Boot's
#       @see {@link org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController}
#    2. Setting the property `server.error.path` in application.properties as:
#
#       server.error.path = /error
#
#  4. Create Custom Error Pages - Let's create error.html under resources/public,
#     and 400.html and 405.html under resources/public/error
#
server.error.whitelabel.enabled=false
server.error.path=/error
